{\rtf1\ansi\ansicpg1252\cocoartf2761
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 // Online Java Compiler\
// Use this editor to write, compile and run your Java code online\
import java.util.*;\
public class Cliques \{\
    \
    \
static void dfs(String node, Map<String, List<String>>graph,Set<String> visited,Set<String> cliq)\
    \{\
        visited.add(node);\
        cliq.add(node);\
        for(String neighbour:graph.get(node))\
        \{\
            if(!visited.contains(neighbour))\
            dfs(neighbour,graph,visited,cliq);\
        \}\
    \}\
    \
\
\
    \
static   List<Set<String>> findCliques( Map<String, List<String>> graph)\
\{\
    List<Set<String>> cliques = new ArrayList<>();\
    Set<String> visited=new HashSet<>();\
    \
    for(String node: graph.keySet())\
    \{\
        if(!visited.contains(node))\
        \{\
            Set<String> cliq=new HashSet<>();\
            dfs(node,graph,visited,cliq);\
            if(cliq.size()>1)\
            cliques.add(cliq);\
        \}\
    \}\
    \
    return cliques;\
    \
\}\
    public static void main(String[] args) \{\
      Map<String, List<String>> graph = new HashMap<>();\
        graph.put("A", Arrays.asList("B", "C", "D"));\
        graph.put("B", Arrays.asList("A", "C", "D"));\
        graph.put("C", Arrays.asList("A", "B", "D"));\
        graph.put("D", Arrays.asList("A", "B", "C"));\
        graph.put("E", Arrays.asList("F"));\
        graph.put("F", Arrays.asList("E"));\
 \
        List<Set<String>> c = findCliques(graph);\
        System.out.println("Number of cliques: " + c.size());\
        System.out.println("Cliques: " + c);\
    \}\
\}}