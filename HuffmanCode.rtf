{\rtf1\ansi\ansicpg1252\cocoartf2761
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 // Online Java Compiler\
// Use this editor to write, compile and run your Java code online\
import java.util.*;\
class Huffman\
\{\
    int data;\
    char c;\
    Huffman left,right;\
\}\
\
class MyComparator implements Comparator<Huffman>\
\{\
    public int compare(Huffman h1, Huffman h2)\
    \{\
       return h1.data-h2.data;\
    \}\
\}\
public class HuffmanImplementation \{\
    \
    public static void printCode(Huffman root, String s)\
    \{\
        if(root.left==null && root.right==null &&\
        Character.isLetter(root.c))\
        \{\
            System.out.println(root.c+":"+s);\
            return;\
        \}\
        printCode(root.left,s+"0");\
        printCode(root.right,s+"1");\
    \}\
    \
    public static void main(String[] args) \{\
        \
        int n = 6; \
        char[] charArray = \{ 'a', 'b', 'c', 'd', 'e', 'f' \}; \
        int[] charfreq = \{ 5, 9, 12, 13, 16, 45 \}; \
        \
        PriorityQueue<Huffman> q \
            = new PriorityQueue<Huffman>( \
                n, new MyComparator()); \
        \
        for(int i=0;i<n;i++)\
        \{\
            Huffman node=new Huffman();\
            node.data=charfreq[i];\
            node.c=charArray[i];\
            node.left=null;\
            node.right=null;\
            \
            q.add(node);\
        \}\
        \
        Huffman root=new Huffman();\
        while(q.size()>1)\
        \{\
            Huffman l=q.peek();\
            q.poll();\
            Huffman r=q.peek();\
            q.poll();\
            Huffman f=new Huffman();\
            \
            f.data=l.data+r.data;\
            f.c='-';\
            f.left=l;\
            f.right=r;\
            \
            root=f;\
            q.add(f);\
            \
            \
            \
        \}\
  printCode(root,"");\
        \
    \}\
\}}